name: Release

on:
  push:
    branches: ["dev9"]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - exec_postfix: "x86_64-avx512"
            add_rustflags: "-Ctarget-feature=+crt-static,-bmi2 -Ctarget-cpu=x86-64-v4"
            toolchain: "x86_64-unknown-linux-musl"
            cflags: "-march=x86-64-v4"
          - exec_postfix: "x86_64-avx2"
            add_rustflags: "-Ctarget-feature=+crt-static,-bmi2 -Ctarget-cpu=x86-64-v3"
            toolchain: "x86_64-unknown-linux-musl"
            cflags: "-march=x86-64-v3"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build
        env:
          RUSTFLAGS: '${{ matrix.add_rustflags }}'
          CFLAGS: '${{ matrix.cflags }}'
        run: |
          sudo apt-get install -y musl-tools
          if [ "${{ matrix.exec_postfix }}" == "x86_64-avx512" ]; then
            rustup toolchain install nightly-2025-04-05
            rustup override set nightly-2025-04-05
            rustup target add ${{ matrix.toolchain }}
            export CARGO_OPTS="--target ${{ matrix.toolchain }} --bin velvet --features=fathomrs,avx512"
            RUSTFLAGS= make pgo-init
            make pgo-build
          else
            rustup override set 1.86.0
            rustup target add ${{ matrix.toolchain }}
            export CARGO_OPTS="--target ${{ matrix.toolchain }} --bin velvet --features=fathomrs"
            RUSTFLAGS= make pgo-init
            make pgo-build
          fi
          mv target/${{ matrix.toolchain }}/release/velvet velvet-linux-${{ matrix.exec_postfix }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: velvet-linux-${{ matrix.exec_postfix }}
          path: velvet-linux-${{ matrix.exec_postfix }}

