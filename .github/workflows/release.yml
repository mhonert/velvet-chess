name: Release

on:
  push:
    tags: "v*"

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - exec_postfix: "x86_64-avx512"
            add_rustflags: "-Ctarget-feature=+crt-static -Ctarget-cpu=x86-64-v4 -Cprofile-use=./pgo/merged_avx512_linux.profdata"
            toolchain: "x86_64-unknown-linux-musl"
            cflags: "-march=x86-64-v4"
          - exec_postfix: "x86_64-avx2"
            add_rustflags: "-Ctarget-feature=+crt-static,-bmi2 -Ctarget-cpu=x86-64-v3"
            toolchain: "x86_64-unknown-linux-musl"
            cflags: "-march=x86-64-v3"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build
        env:
          RUSTFLAGS: '${{ matrix.add_rustflags }}'
          CFLAGS: '${{ matrix.cflags }}'
          CARGO_OPTS: '--target ${{ matrix.toolchain }} --bin velvet --features=fathomrs'
        run: |
          sudo apt-get install -y musl-tools
          if [ "${{ matrix.exec_postfix }}" == "x86_64-avx512" ]; then
            rustup toolchain install 1.89.0-beta.3
            rustup override set 1.89.0-beta.3
            rustup target add ${{ matrix.toolchain }}
            cargo build --release --target ${{ matrix.toolchain }} --bin velvet --features=fathomrs,avx512
          else
            rustup override set 1.88.0
            rustup target add ${{ matrix.toolchain }}
            RUSTFLAGS= make pgo-init
            make pgo-build
          fi
          mv target/${{ matrix.toolchain }}/release/velvet velvet-linux-${{ matrix.exec_postfix }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: velvet-linux-${{ matrix.exec_postfix }}
          path: velvet-linux-${{ matrix.exec_postfix }}

  release:
    if: github.repository == 'mhonert/velvet-chess'
    needs: [build-linux]
    name: Publish release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          pattern: velvet-linux-*
          merge-multiple: true

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          tag_name="${GITHUB_REF##*/}"
          ls -l
          chmod +x velvet-linux-x86_64*
          mv velvet-linux-x86_64-avx512 velvet-${tag_name}-x86_64-avx512
          mv velvet-linux-x86_64-avx2 velvet-${tag_name}-x86_64-avx2
          sha256sum velvet-* > checksums.txt
          gh release create "$tag_name" --draft \
                             --title "$tag_name" \
                             --notes-file artifacts/release_notes.md \
                             "checksums.txt#Checksums" \
                             "velvet-${tag_name}-x86_64-avx512#Velvet - Linux (x86_64 - AVX512)" \
                             "velvet-${tag_name}-x86_64-avx2#Velvet - Linux (x86_64 - AVX2)"
